@page "/list-group/{GetCurrentGroupIDPage:int}"

@using CW_ordermedicine.Data.Models
@using CW_ordermedicine.Data.Services
@inject UserService userService
@inject GroupMemberService groupmemberService
@inject LoginService loginService
@inject NotificationService notificationservice

<!--
@if (adduser == null)
{
	<p>Loading </p>
}
else
{
	<RadzenGrid AllowPaging="true" AllowFiltering="true"
		PageSize="2" AllowSorting="true" Data="@adduser" TItem="AddUser" ColumnWidth="150px">
		<Columns>
			<RadzenGridColumn TItem="AddUser" Property="UserID" Title="User ID" ></RadzenGridColumn>
			<RadzenGridColumn TItem="AddUser" Property="Email" Title="Email"></RadzenGridColumn>
			<RadzenGridColumn TItem="AddUser" Property="Username" Title="Username"></RadzenGridColumn>
			<RadzenGridColumn TItem="AddUser" Property="Department" Title="Department"></RadzenGridColumn>

		</Columns>
	</RadzenGrid>
}
-->
<!-- รูปแบบเก่าที่ไม่ใช้ Component -->
<div class="">

	@foreach (var Group in ListGroupMember.FindAll(e => e.GroupID == GetCurrentGroupIDPage))
	{
		<h2 class="">
			กลุ่ม : @Group.GroupName
		</h2>
	}

</div>
<div class="">
	<table class="table table-hover">
		<thead>
			<tr>
				<th scope="col">#</th>
				<th scope="col">ภาพ</th>

				<th scope="col">ชื่อ - นามสกุล</th>
				<th scope="col">แผนก</th>
				<th scope="col"></th>
			</tr>
		</thead>
		<tbody>

			@for (int i = 0; i < ListUsers.Count; i++)
			{

				@if (ListUsers[i].GroupID == GetCurrentGroupIDPage)
				{
					var tempint = i;

					@*@foreach(var User in ListUsers.FindAll(e => e.GroupID == GetCurrentGroupIDPage))
			{*@
					<tr>
						<td>@(i + 1)</td>
						<th scope="row">
							<img class="rounded-3" style="width:30px; height:30px;" src="img/@ListUsers[i].UserImgName">
						</th>
						<td>@ListUsers[i].Username</td>
						<td>@ListUsers[i].Department</td>

						<td>
							@if (UserLogin.Level == "admin")
							{
								<div class="text-danger me-1" style="border-radius:10px;cursor:pointer;" @onclick="()=>OnDeleteMember(ListUsers[tempint])">
									ลบสมาชิก
								</div>
							}
							else
							{
								<div class="text-danger me-1" style="border-radius:10px;cursor:pointer;" @onclick="ShowNotificationAlert">
									ลบสมาชิก
								</div>
							}
						</td>
					</tr>
				}
			}

			<!--
				<RadzenDataGrid FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true"
							PageSize="10" Data="@ListUsers.Where(e=>e.GroupID == GetCurrentGroupIDPage)" TItem="User" ColumnWidth="150px">
					<Columns>

						<RadzenDataGridColumn TItem="User" Title="ดูรายละเอียดเพิ่มเติม">
			@*<Template Context="data">
						<RadzenButton Click=@(args => OpenOrderBillPage(data.OrderID))
								  ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="pageview" Class="m-1" />
					</Template>*@
						</RadzenDataGridColumn>
					<RadzenDataGridColumn TItem="User" Property="UserImgName" Title="รูป" >
						<Template Context="User">
							<RadzenImage Path="@($"data:img/")" style="width: 40px; height: 40px; border-radius: 8px; margin-right: 8px; float: left;" />

						</Template>
					</RadzenDataGridColumn>
					<RadzenDataGridColumn TItem="User" Property="Name" Title="ชื่อ - สกุล / บาท" Filterable="false" TextAlign="TextAlign.Center"></RadzenDataGridColumn>
					<RadzenDataGridColumn TItem="User" Property="Department" Title="แผนก" Filterable="false" TextAlign="TextAlign.Center"></RadzenDataGridColumn>
						<RadzenDataGridColumn TItem="User" Property="" Title="" Filterable="false" TextAlign="TextAlign.Center"></RadzenDataGridColumn>

					</Columns>
				</RadzenDataGrid>
			-->


		</tbody>

	</table>
</div>
<div class="position-sticky" style=" bottom:0px; text-align:end;  ">
	<div class="row">
		<div class="">
			@if (UserLogin.Level == "admin")
			{
				<button class="btn btn-success shadow mt-1 mb-2" style="border-radius:50%; font-size:30px; border:none;" data-bs-toggle="modal" data-bs-target="#FromAddMember">
					<i class="fa-solid fa-plus" style="font-size:30px;"></i>
				</button>
			}
			else
			{
				<button class="btn btn-success shadow mt-1 mb-2" style="border-radius:50%; font-size:30px; border:none;" @onclick="ShowNotificationAlert">
					<i class="fa-solid fa-plus" style="font-size:30px;"></i>
				</button>
			}
		</div>
	</div>
</div>

<FromAddMember OnAddSelectedUser="RefreshMember" CurrentGroupID="GetCurrentGroupIDPage"></FromAddMember>

@code {
	[Parameter]
	public int GetCurrentGroupIDPage { get; set; }

	private List<User> ListUsers = new List<User>();
	private int CountMember;
	private int AmountPeople = 0;
	private List<GroupMember> ListGroupMember = new List<GroupMember>();
	private List<User> Model = new List<User>();
	private User? UserLogin = new();
	private User? UserE = new();
	int i = 1;
	//private List<User?> User = new();
	protected override async Task OnInitializedAsync()
	{
		var Users = await userService.GetUserAsync();
		foreach (var user in Users)
		{
			ListUsers.Add(new User().ToUi(user));
		}

		var Groups = await groupmemberService.GetGroupAsync();
		foreach (var Group in Groups)
		{
			ListGroupMember.Add(new GroupMember().ToUi(Group));
		}

		//ListGroupMember = await groupmemberService.GetGroupAsync();
		UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI
	}

	private void OnDeleteMember(User eleuser)
	{
		//ListUser.Add(new User()
		//	{
		//		UserID = eleuser.UserID,
		//		Username = eleuser.Username,
		//		Department = eleuser.Department,
		//		GroupID = 0

		//	});
		eleuser.GroupID = 0;
		var a = new User().ToTable(eleuser); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
		userService.EditUser(a); //บันทึกข้อมูล
		ListUsers.Remove(eleuser);
		ShowNotificationDeleteMember();
	}
	private void CountPeople()
	{

		AmountPeople++;
	}

	private void RefreshMember(List<User> SelectedUser)
	{
		foreach (var SelectedUsers in SelectedUser)
		{
			ListUsers.Add(SelectedUsers);
			SelectedUsers.GroupID = GetCurrentGroupIDPage;

			var a = new User().ToTable(SelectedUsers); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
			userService.EditUser(a); //บันทึกข้อมูล

		}

	}
	private void ShowNotificationDeleteMember()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Error,
				Summary = "สมาชิกถูกลบแล้ว",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private void ShowNotificationAlert()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Warning,
				Summary = "สำหรับ admin เท่านั้น !",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
}

