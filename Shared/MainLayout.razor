@inherits LayoutComponentBase
@using CW_ordermedicine.Data.Models;
@using CW_ordermedicine.Data.Services;
@inject CartProductService cartproductService
@inject UserService userService
@inject LoginService loginService
@inject NavigationManager NavigationManager
@inject NotificationService notificationservice

<PageTitle>CW_ordermedicine</PageTitle>
<RadzenNotification></RadzenNotification>
@if (Islogin == true)
{
	
		<div class="page">

			<div class="sidebar">
				<NavMenu />
			</div>

			<main class="" style="top:0px;">
				<div class="container-fluid shadow rounded position-sticky" style="top:0px; background-color:gainsboro; z-index:1;">
					<div class="d-flex flex-row-reverse " style="">
						<!--Drop down Profile-->
						<div class="p-2 mt-1">
							<div class="dropdown">
								<button class="btn btn-none dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
								<img class="rounded-3" style="width:30px; height:30px;" src="img/@UserLogin.UserImgName">
								@UserLogin.Name
								</button>
								<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
									<li>
										<button class="dropdown-item" @onclick="OnLogout">
											<i class="fa-solid fa-right-from-bracket me-3">
											</i>Logout
										</button>
									</li>
								</ul>
							</div>
						</div>
						<!--icon cart-->
						<NavLink href="cart">
							<div class="p-2 mt-2">
								<button type="button" class="btn  position-relative">
									<i class="fa-solid fa-cart-plus" style="color:black"></i>

								</button>
							</div>
						</NavLink>


					</div>
				</div>

				<article class="content px-4">
					@Body
				</article>
			</main>
		</div>
	

}
else if (Islogin == false)
{
	<p class="container-fluid bg overflow-auto" style="background-image: url(/img/profile1.jpg);">
		<div class="container py-5 h-100">
			<div class="row d-flex justify-content-center align-items-center h-100">

				<div class="col-12 col-md-8 col-lg-6 col-xl-5">
					<div class="card text-white shadow  rounded"
					 style="background-color:rgba(0, 112, 255, 0.8);border-radius: 1rem;">

						<div class="card-body p-5 text-center">
							<div class="mb-md-5 mt-md-4 pb-5">
								<h2 class="fw-bold mb-2 text-uppercase">Login</h2>
								<p class="text-white-50 mb-5">Please enter your login and password!</p>
								<EditForm Model="@Model" OnSubmit="OnLogin">
									<div class="form-outline form-white mb-4">
										<InputText @bind-Value="Model.Username" class="form-control form-control-lg" placeholder="123@gmail.com" />
										<label class="form-label" for="typeEmailX">UserName</label>
									</div>

									<div class="form-outline form-white mb-4">
										<InputText @bind-Value="Model.Password" type="password" class="form-control form-control-lg" placeholder="password" />
										<label class="form-label" for="typePasswordX">Password</label>
									</div>
									@*<p class="small mb-5 pb-lg-2">
										<a href="forgotpassword" class="text-white-50" data-bs-toggle="modal" data-bs-target="#FromForgotPassword">forgotpassword? </a>
									</p>*@

									<button class="btn btn-outline-light btn-lg px-5" type="submit">
										LOG IN
									</button>
								</EditForm>
								<!-- trigger modal -->
								@*<div class="d-flex justify-content-center text-center mt-4 pt-1">
									<a href="#!" class="text-white"><i class="fab fa-facebook-f fa-lg"></i></a>
									<a href="#!" class="text-white"><i class="fab fa-twitter fa-lg mx-4 px-2"></i></a>
									<a href="#!" class="text-white"><i class="fab fa-google fa-lg"></i></a>
								</div>*@

							</div>

							<div>
								@*<p class="mb-0" @onclick="register">
									<!--หน้า ลงทะเบียนพนักงาน ต้องมีการเก็บข้อมูลแยกกรุ๊ป-->
									Don't have an account? <a href="register" class="text-white-50 fw-bold">Sign Up</a>
								</p>*@
							</div>

						</div>
					</div>
				</div>

			</div>
		</div>

	</p>


}
@code {
	private bool Islogin = false;
	private List<CartProduct> ListCartProduct = new List<CartProduct>();
	private List<User> ListUser = new List<User>();
	private User Model = new User();
	private User? UserLogin = new();

	private void forgotpassword()
	{
		// Islogin = !Islogin;
		if (Islogin == false)
		{
			Islogin = true;
		}
		else
		{
			Islogin = false;
		}
	}
	private void register()
	{
		// Islogin = !Islogin;
		if (Islogin == false)
		{
			Islogin = true;
		}
		else
		{
			Islogin = false;
		}
	}


	protected override async Task OnInitializedAsync()
	{
		ListCartProduct = await cartproductService.GetCartProductsAsync();
		var Users = await userService.GetUserAsync();

		CountCart();
		Model = new User();



	}
	private void CountCart()
	{
		ListCartProduct.Count();

	}

	private async void OnLogin()
	{

		bool Status = await loginService.Login(Model.Username, Model.Password);
		Islogin = Status;
		if (Islogin == true)
		{
			UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI
			ShowNotificationLogin();
		}
		else
		{
			ShowNotificationLoginFlase();
		}
	}

	private  void OnLogout()
	{
		bool Status =  loginService.LogOut();
		Islogin = Status;
		OpenLotOutPage();

	}
	private void OpenLotOutPage()
	{
		NavigationManager.NavigateTo("/");
	}
	private void ShowNotificationLogin()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Success,
				Summary = "ยินดีต้อนรับเข้าสู่ระบบ",
				Detail = UserLogin.Name,
				Duration = 1500,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private void ShowNotificationLoginFlase()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Error,
				Summary = "รหัสไม่ถูกต้อง !",
				Detail = "",
				Duration = 1500,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
} 