@page "/report-page"
@inject IJSRuntime js
@using CW_ordermedicine.Data.Models
@using CW_ordermedicine.Data.Services
@inject ReportService reportService
@inject UserService userService
@inject LoginService loginService
@inject NavigationManager NavigationManager


<div class="container-fluid">
	<CW_ordermedicine.Pages.Report.Menu></CW_ordermedicine.Pages.Report.Menu>
	<CW_ordermedicine.Pages.Report.Progress></CW_ordermedicine.Pages.Report.Progress>
	<div>
		@*<RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Placeholder</RadzenText>
		<RadzenTextBox Placeholder="Search..." Change=@(args => Search()) class="w-100" />*@

		<!--<div class="card mt-3 mb-3">
			<div class="card-header" style="text-align:center;">
				<h1>ค้นหารายงาน</h1>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-lg-1">
						<div class="form-check mb-3 mt-0">
							<input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @onclick="OnCheckAll">
							<label class="form-check-label" for="flexCheckDefault">
								เลือกทั้งหมด
							</label>
						</div>
					</div>

					<div class="col">
						<div class="search-container">
							<div>
								<label>แผนก : </label>
								<input type="text" placeholder="Search.." name="" @bind="SearchWord" @bind:event="oninput" />
							</div>
						</div>
					</div>

					<div class="col">
						<div class="search-container">
							<div>
								<label>รายชื่อ : </label>
								<input type="text" placeholder="Search.." name="" @bind="SearchName" @bind:event="oninput" />
							</div>
						</div>
					</div>
		@*<div class="col">
					<div class="search-container">
					<div>
					<label>วันที่ : </label>
					<input type="date" placeholder="Search.." name="" @bind="SearchDate" @bind:event="oninputDate"/>
					</div>
					</div>
					</div>*@
				</div>
				<table class="table">
					<thead>
						<tr>
							<th scope="col"></th>
							<th scope="col">รายละเอียดเพิ่มเติม</th>
							<th scope="col">รหัสคำสั่งซื้อ</th>
							<th scope="col">ชื่อผู้ทำรายการ</th>
							<th scope="col">แผนก</th>
							<th scope="col">ราคาสุทธิ</th>
							<th scope="col">วันเวลาทำรายการ</th>
						</tr>
					</thead>
					<tbody>

		@foreach (var Report in ListReport.Where(s => s.ReportStatus == "Success" &&
		s.ReportDepartment.ToUpper().Contains(SearchWord.ToUpper()
		@*s.ReportUserName.ToUpper().Contains(SearchName.ToUpper()*@
		)))
		{
							<tr>
								<th scope="">
									<div class="form-check">
										<input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @bind="Report.ReportCheck" @onclick="()=>OnSum(Report)">
										<label class="form-check-label" for="flexCheckDefault">
										</label>
									</div>
								</th>
								<td>
									<button class="btn btn-link" @onclick="()=>OpenOrderBillPage(Report.ReportID)">
										ดูเพิ่มเติม
									</button>
								</td>
								<td>@Report.ReportID</td>
								<td>@Report.ReportUserName</td>
								<td>@Report.ReportDepartment</td>
								<td>@Report.ReportPriceSum</td>
								<td>@Report.ReportDate</td>
							</tr>
		}

					</tbody>
					<tfoot style="text-align:center">
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>ราคาทั้งหมด : @ListReport.Sum(e=>e.ReportPriceSum) บาท</td>
							<td>
							</td>
						</tr>
					</tfoot>
				</table>
			</div>
		</div>
		-->


		<div class="card">
			<div class="card-header" style="text-align:center;">
				<h1>ค้นหารายงาน</h1>
			</div>
			<div class="card-body">
				<div class="col-lg-1">
					<div class="form-check mb-3 mt-0">
						<input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @onclick="OnCheckAll">
						<label class="form-check-label" for="flexCheckDefault">
							เลือกทั้งหมด
						</label>
					</div>
				</div>
				<RadzenDataGrid FilterMode="FilterMode.Simple"
								AllowFiltering="true" AllowPaging="true" AllowSorting="true" AllowColumnResize="true"
								PageSize="50" Data="@(ListReport.Where(o => o.ReportStatus == "Success"))" TItem="CW_ordermedicine.Data.Models.Report" ColumnWidth="150px"
								FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
								LogicalFilterOperator="LogicalFilterOperator.Or" style="--rz-grid-header-background-color:;
						--rz-grid-hover-background-color: blue;
						--rz-grid-hover-color: red;
						--rz-grid-cell-color: grey;">

					<Columns>
						<RadzenDataGridColumn TItem="Report " Title="" TextAlign="TextAlign.Center">
							<Template Context="data">
								<div class="form-check ms-3">
									<input class="form-check-input" type="checkbox" @bind="data.ReportCheck" @onclick="()=>OnSum(data)">
								</div>
							</Template>
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="Report " Title="ดูรายละเอียดเพิ่มเติม" TextAlign="TextAlign.Center">
							<Template Context="data">
								<RadzenButton Click=@(args => OpenOrderBillPage(data.ReportID))
											  ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="pageview" Class="m-1" /> @*ปุ่มดูรายละเอียด*@
							</Template>
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="CW_ordermedicine.Data.Models.Report" Property="ReportID" Title="รหัสคำสั่งซื้อ" Filterable="true">
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="CW_ordermedicine.Data.Models.Report" Property="ReportUserName" Title="ชื่อผู้ทำรายการ"
											  Type="typeof(IEnumerable<string>)" TextAlign="TextAlign.Center"
											  FilterValue="@selectedUserName" FilterOperator="FilterOperator.Contains"
											  LogicalFilterOperator="LogicalFilterOperator.Or">

							<FilterTemplate>
								<RadzenDropDown @bind-Value=selectedUserName Style="width:100%;"
												Data="@(ListUsers)" TextProperty="Name" ValueProperty="Name"
												AllowFiltering="true" AllowClear="true" Multiple="true" />
							</FilterTemplate>

						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="Report" Title="แผนก" Property="ReportDepartment"
											  Type="typeof(IEnumerable<string>)" TextAlign="TextAlign.Center"
											  FilterValue="@selectedDepartment" FilterOperator="FilterOperator.Contains"
											  LogicalFilterOperator="LogicalFilterOperator.Or">

							<FilterTemplate>
								<RadzenDropDown @bind-Value=@selectedDepartment Style="width:100%;"
												Change=@OnSelectedDepartmentChange Data="@(Departments)" AllowClear="true" Multiple="true" />
							</FilterTemplate>
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="CW_ordermedicine.Data.Models.Report" Property="ReportPriceSum" Title="ราคาสุทธิ">
							@*<Template Context="report">
							@String.Format(new System.Globalization.CultureInfo("th-TH"), "{0:C}", report.ReportPriceSum)
							</Template>*@
							<FooterTemplate>
								@*@{
								var FinancialStructureValuseEur = this.ListReport.Sum(i => i.ReportPriceSum);
								}
								<b>
								<span class="mathsign">&sum;</span> @String.Format("{0:THB #,##0.00}",FinancialStructureValuseEur)
								</b>*@

								@*@if (CreateToVar == "")//มันสร้างvarได้แค่ภายในIFเลยต้องIFว่างๆมา//วิธีสำหรับให้เห็นราคารวมของแต่ละร้านค้า
								{
								var Report = ListReport.FindAll(e => e.ReportUserID == UserLogin.UserID);
								@String.Format(new System.Globalization.CultureInfo("th-TH"), "{0:C}",
								Report.Sum(e=>e.ReportPriceSum)
								)
								}*@
								ราคารวม : <b>@String.Format(new System.Globalization.CultureInfo("th-TH"), "{0:C}", ListReport.Sum(o => o.ReportPriceSum))</b> บาท
							</FooterTemplate>
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="CW_ordermedicine.Data.Models.Report" Property="ReportPriceSum" Title="ราคาสุทธิ"></RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="CW_ordermedicine.Data.Models.Report" Property="ReportDate" Title="วันเวลาทำรายการ" FormatString="{0:d}"></RadzenDataGridColumn>

					</Columns>

				</RadzenDataGrid>
			</div>

		</div>

		@*//////////////////////////////////////*@
		<div class="card mt-3 mb-3">
			<div class="card-header" style="text-align:center;">
				<h1>รายงานที่เลือก</h1>
			</div>
			<div class="card-body">
				<table class="table">
					<thead>
						<tr>

							<th scope="col">รหัสคำสั่งซื้อ</th>
							<th scope="col">ชื่อผู้ทำรายการ</th>
							<th scope="col">แผนก</th>
							<th scope="col">ราคาสุทธิ</th>
							<th scope="col">วันเวลาทำรายการ</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var Report in ListReport.Where(s => s.ReportStatus == "Success" && s.ReportCheck == true && s.ReportDepartment.ToUpper().Contains(SearchWord.ToUpper())))
						{
							<tr>
								<td>@Report.ReportID</td>
								<td>@Report.ReportUserName</td>
								<td>@Report.ReportDepartment</td>
								<td>@Report.ReportPriceSum</td>
								<td>@Report.ReportDate</td>
							</tr>
						}
					</tbody>
					<tfoot style="text-align:center">
						<tr>
							<td>จำนวนคำสั่งซื้อ : @ListReport.FindAll(e=>e.ReportCheck == true).Count() รายการ</td>
							<td></td>
							<td></td>
							<td>ราคาทั้งหมด : @SumPriceCheck บาท</td>
							<td></td>
							<td>
							</td>
						</tr>
					</tfoot>
				</table>
				<div class="row">
					<div class="col" style="text-align:end;">
						<button class="btn btn-primary" @onclick="OnPagePrint" data-bs-toggle="modal" data-bs-target="#PrintDiv">พิมพ์</button>
					</div>
				</div>
			</div>
		</div>
		@*<div class="position-sticky " style=" bottom:0px; text-align:end; z-index:2;  ">
		<button class="btn btn-primary shadow mt-1 mb-2 me-3" style="border-radius:50%; font-size:30px; border:none;" data-bs-toggle="modal" data-bs-target="#FromAddMember">
		<i @onclick="GoToReportViewer" class="fa-solid fa-print" style="font-size:30px;"></i>
		</button>
		</div>*@
	</div>
</div>

@if (ShowPrint == true)
{
	<div class="PrintShowout bg-black bg-opacity-50 d-flex justify-content-center " style="position:absolute;z-index:35;">
		<div class="row mb-2 d-inline-flex justify-content-end position-relative" style="bottom:-20%;left:80%;">
		</div>
		<div class="bg-white PrintShowin" style="position:relative; top:100px;">
			<div class="card">
				<div class="card-header">
					<div class="row">
						<div class="col">
							<i class="fa-solid fa-print"></i>
							สั่งพิมพ์
						</div>
						<div class="col" style="text-align:end;">
							<button class="btn btn-close" @onclick="OnCloseShowPrint"></button>
						</div>
					</div>

					
				</div>
				<div class="card-body d-flex justify-content-center align-items-center " style="position:relative;top:30px;">
					<div class="row">
						<div class="col" style="text-align:center;">
							<div class="" id="PrintDiv">
								@html
							</div>
						</div>
					</div>


				</div>
				<div class="card-footer" style="margin-top:45px;">
					<div class="" style="text-align:end; ">
						<button type="button" class="btn btn-primary" @onclick="Print">สั่งพิมพ์</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}

@code {
	private List<CW_ordermedicine.Data.Models.Report> ListReport = new List<CW_ordermedicine.Data.Models.Report>();
	private List<User> ListUsers = new List<User>();
	private User UserLogin = new();
	private string CreateToVar = "";

	public string SearchWord { get; set; } = string.Empty;
	List<string> options;

	public DateTime SearchDate { get; set; } = DateTime.Today;
	List<DateTime> optionsDate;

	public string SearchName { get; set; } = string.Empty;
	List<string> optionsName;

	private Report CheckBox = new();
	private bool status = true;
	private bool ShowPrint = false;
	protected override async Task OnInitializedAsync()
	{
		var Reports = await reportService.GetReportsAsync();
		foreach (var Report in Reports)
		{
			ListReport.Add(new Report().ToUi(Report));
		}
		var Users = await userService.GetUserAsync();
		foreach (var User in Users)
		{
			ListUsers.Add(new User().ToUi(User));
		}
		UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI

		options = ListReport.Select(f => f.ReportDepartment).Distinct().ToList();

		optionsDate = ListReport.Select(o => o.ReportDate).Distinct().ToList();

		optionsName = ListReport.Select(o => o.ReportUserName).Distinct().ToList();

		SaveSumPrice();
	}

	IEnumerable<string> selectedDepartment;
	List<string> Departments = new List<string> { "Software", "Account", "Maid" };
	void OnSelectedDepartmentChange(object value)
	{
		if (selectedDepartment != null && !selectedDepartment.Any())
		{
			selectedDepartment = null;
		}
	}

	IEnumerable<string> selectedUserName;
	IEnumerable<int> selectedReportID;

	private void OpenOrderBillPage(int SentOrderIDPage)
	{
		NavigationManager.NavigateTo($"/orderbill/{SentOrderIDPage}");
	}

	private void GoToReportViewer()
	{
		NavigationManager.NavigateTo($"/reportViewer/");
	}

	private double price;
	double SumPriceCheck = 0.0;
	private void OnSum(Report ID)
	{
		price = 0;
		price = price + ID.ReportPriceSum ?? 0.0;
		foreach (var Report in ListReport.FindAll(e => e.ReportStatus == "Success" && e.ReportID == ID.ReportID))
		{
			if (Report.ReportCheck == null)
			{
				Report.ReportCheck = false;
			}
			Report.ReportCheck = !Report.ReportCheck;
			if (Report.ReportCheck == true)
			{
				SumPriceCheck = SumPriceCheck + Report.ReportPriceSum ?? 0.0;
			}
			if (Report.ReportCheck == false)
			{
				SumPriceCheck = SumPriceCheck - Report.ReportPriceSum ?? 0.0;
			}
			var a = new Report().ToTable(Report); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
			reportService.EditReport(a); //บันทึกข้อมูล
		}
	}

	private bool CheckAll = false;
	private void OnCheckAll()
	{
		SumPriceCheck = 0.0;
		CheckAll = !CheckAll;
		if (CheckAll == true)
		{
			foreach (var Report in ListReport.FindAll(e => e.ReportStatus == "Success"))
			{
				Report.ReportCheck = true;
				if (Report.ReportCheck == true)
				{
					SumPriceCheck = SumPriceCheck + Report.ReportPriceSum ?? 0.0;
				}
				var ReportE = new Report().ToTable(Report); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
				reportService.EditReport(ReportE); //บันทึกข้อมูล
			}
		}
		if (CheckAll == false)
		{
			foreach (var Report in ListReport.FindAll(e => e.ReportStatus == "Success"))
			{
				Report.ReportCheck = false;
				if (Report.ReportCheck == false)
				{
					SumPriceCheck = 0.0;
				}
				var ReportE = new Report().ToTable(Report); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
				reportService.EditReport(ReportE); //บันทึกข้อมูล
			}
		}
	}
	private void SaveSumPrice()
	{
		foreach (var Report in ListReport.FindAll(e => e.ReportStatus == "Success"))
		{
			if (Report.ReportCheck == true)
			{
				SumPriceCheck = SumPriceCheck + Report.ReportPriceSum ?? 0.0;
			}
		}

	}

	public RenderFragment html;
	public async void OnPagePrint()
	{
		ShowPrint = !ShowPrint;
		var Reports = await reportService.GetReportsAsync();
		ListReport.Clear();
		foreach (var Report in Reports)
		{
			ListReport.Add(new Report().ToUi(Report));
		}
		RenderFragment CreateDynamicComponent() => builder =>
		{
			builder.OpenComponent(0, typeof(PrintViwer.RP_OrderSelect)); //ฟังก์ชั่นดึงไฟล์ที่เรียกมาแสดง
			
			builder.CloseComponent();
		};
		html = CreateDynamicComponent();
	}
	/****************************************************/
	public async Task Print()  //กดปริ้น
	{
		var Reports = await reportService.GetReportsAsync();
		ListReport.Clear();
		foreach (var Report in Reports)
		{
			ListReport.Add(new Report().ToUi(Report));
		}
		await js.InvokeVoidAsync("Print"); //ห้ามเปลี่ยนเด็ดขาด
	}
	/****************************************************/
	private async void RefreshData()
	{
		NavigationManager.NavigateTo($"/RP_ProfileProduct");
		NavigationManager.NavigateTo($"/report-page");
	}
	public void OnCloseShowPrint()
	{
		ShowPrint = !ShowPrint;
	}
}

