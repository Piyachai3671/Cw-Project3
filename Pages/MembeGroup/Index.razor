@page "/member-group"
@using CW_ordermedicine.Data.Models
@using CW_ordermedicine.Data.Services
@inject GroupMemberService groupMemberService
@inject UserService userService
@inject LoginService loginService
@inject NavigationManager NavigationManager
@inject NotificationService notificationservice
<div class="container border-card">
	<div class="row">
		<div class="card-header" style=" color:#ffffff; background: linear-gradient( 90deg,#8BD2EC,#92CEA8, #FCEE9E,#FFF3D7);">
			<div class="d-flex bd-highlight">
				<div class="p-2 flex-grow-1 bd-highlight">
					<h3>Member Group</h3>
				</div>
				<div class="p-2 bd-highlight">
					@if (UserLogin.Level == "admin")
					{
						<button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#FromAddGroup"><i class="fa-solid fa-plus me-2"></i>Create Group</button>
					}
					else
					{
						<button class="btn btn-success" @onclick="ShowNotificationDelete"><i class="fa-solid fa-plus me-2"></i>Create Group</button>
					}
				</div>
			</div>
		</div>

		<div class="card-body bg2" style="background-color:rgba(204,255,255,0.6);">

			<div class="row">
				@if (ListGroupMember == null)
				{ }
				else
				{
					@foreach (var Group in ListGroupMember)
					{
						<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6  mb-3">
							<div class="container shadow" style=" border-radius:10px; background-color:white; height:300px; width:330px;">
								<div style="color:black;">
									<strong class="" style="font-size:24px;"> ชื่อกลุ่ม : @Group.GroupName</strong>
									<div class="mt-2" style="font-size:18px;">แผนก @Group.Department</div>


									<button class="btn btn-link" @onclick="()=>OpenGroupInMemberPage(Group.GroupID)">

										<p>ดูสมาชิกทั้งหมด</p>
									</button>


								</div>

								<div style="font-size:20px;position:relative; left:270px; top:-100px;">
									@if (UserLogin.Level == "admin")
									{
										<i class="fa-solid fa-trash bincolor" @onclick="()=>SentValue(Group)" data-bs-toggle="modal" data-bs-target="#ModalDelete"></i>
										//	Modalยืนยันลบกลุ่ม
										<div class="modal fade" id="ModalDelete" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
											<div class="modal-dialog">
												<div class="modal-content">
													<div class="modal-header">
														<h5 class="modal-title" id="exampleModalLabel"><i class="fa-sharp fa-solid fa-circle-check text-success"></i> กรุณายืนยันคำสั่ง</h5>
														<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
													</div>
													<div class="modal-body">
														<div class="" style="text-align:center;">
															คุณต้องการที่จะลบกลุ่ม @ValueGroup.GroupName ใช่ หรือ ไม่ ?
														</div>


													</div>
													<div class="modal-footer">
														<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
														<button type="button" class="btn btn-success" data-bs-dismiss="modal" @onclick="()=>OnDeleteGroup(ValueGroup)">ยืนยัน</button>
													</div>
												</div>
											</div>
										</div>
									}
									else
									{
										<i class="fa-solid fa-trash bincolor" @onclick="ShowNotificationDelete"></i>

									}

								</div>

								<div class="row" style="margin-top:80px; margin-left:170px;">
									<div class="col d-inline-flex">
										@if (UserLogin.Level == "admin")
										{
											<button class="btn btn-warning me-2" style="border-radius:10px; font-size:25px;" data-bs-toggle="modal" data-bs-target="#ModalEdit" @onclick="()=>SentValue(Group)">
												<i class="fa-sharp fa-solid fa-pen-to-square" style="font-size:25px; color:white;"></i>
											</button>
										}
										else
										{
											<button class="btn btn-warning me-2" style="border-radius:10px; font-size:25px;" @onclick="ShowNotificationDelete">
												<i class="fa-sharp fa-solid fa-pen-to-square" style="font-size:25px; color:white;"></i>
											</button>
										}
										<button class="btn btn-success " style="border-radius:10px; font-size:25px;" data-bs-toggle="modal" data-bs-target="#FromAddMember" @onclick="()=>OpenGroupInMemberPage(Group.GroupID)">
											<i class="fa-solid fa-user-plus" style="font-size:19px;"></i>
										</button>
									</div>
								</div>
							</div>
						</div>
					}

				}
			</div>

		</div>

	</div>

</div>

<div class="modal fade" id="ModalEdit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">แก้ไขกลุ่ม @ValueGroup.GroupName</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<EditForm Model="@ValueGroup">
					<div class="form-group mt-2">
						<label for="productname">ชื่อกลุ่ม</label>
						<InputText @bind-Value="ValueGroup.GroupName" type="text" class="form-control mt-2" placeholder=" " />

					</div>
					<label class="mt-2">
						แผนก:
						<InputSelect @bind-Value="ValueGroup.Department">
							<option value="">เลือกแผนก</option>
							<option value="Software">Software</option>
							<option value="Account">Account</option>
							<option value="Maid">Maid</option>
						</InputSelect>
					</label>
				</EditForm>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
				<button type="button" class="btn btn-success" data-bs-dismiss="modal" @onclick="OnClickEditGroup">บันทึก</button>
			</div>
		</div>
	</div>
</div>

<FromAddGroup GetAddGroupID="OnAddGroup"></FromAddGroup>


@code {
	private List<GroupMember> ListGroupMember = new List<GroupMember>();
	private List<User> ListUser = new List<User>();
	private User? ResetGroupID;
	private User? UserLogin = new();
	private GroupMember? ValueGroup = new();

	protected override async Task OnInitializedAsync()
	{
		//ListGroupMember = await groupMemberService.GetGroupAsync();
		var Groups = await groupMemberService.GetGroupAsync();
		foreach (var Group in Groups)
		{
			ListGroupMember.Add(new GroupMember().ToUi(Group));
		}


		var Users = await userService.GetUserAsync();
		foreach (var user in Users)
		{
			ListUser.Add(new User().ToUi(user));
		}
		UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI

	}
	private void SentValue(GroupMember? ID)
	{
		ValueGroup = ID;
	}
	private async Task OnDeleteGroup(GroupMember elegroup)
	{
		ListGroupMember.Remove(elegroup); //ลบกลุ่มUI
		var DeleteGroupMember = new GroupMember().ToTable(elegroup);//ลบกลุ่มในSQL
		groupMemberService.DeleteGroupMember(DeleteGroupMember);
		ShowNotificationDeleteForAdmin();
	}
	private Task OnAddGroup(GroupMember id)
	{
		ListGroupMember.Add(id);
		return Task.CompletedTask;

	}
	private void CurrentID(int SentCurrentGroupID)
	{
		NavigationManager.NavigateTo($"/list-group/{SentCurrentGroupID}");
	}
	private void OpenGroupInMemberPage(int GroupInMemberID)
	{
		NavigationManager.NavigateTo($"/list-group/{GroupInMemberID}");
	}
	private void ShowNotificationDeleteForAdmin()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Success,
				Summary = "กลุ่ม " + ValueGroup.GroupName + " ถูกลบเรียบร้อยแล้ว",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private void ShowNotificationDelete()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Warning,
				Summary = "สำหรับ admin เท่านั้น !",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}
	private void ShowNotificationSuccessEdit()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Success,
				Summary = "แก้ไขสำเร็จ",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}

	private void OnClickEditGroup()
	{
		@foreach (var Group in ListGroupMember.FindAll(e => e.GroupID == ValueGroup.GroupID))
		{
			Group.GroupName = ValueGroup.GroupName;
			Group.Department = ValueGroup.Department;

			var a = new GroupMember().ToTable(Group); //นำค่ามาเก็บใน a แต่ยังไม่บันทึกข้อมูล
			groupMemberService.EditGroup(a); //บันทึกข้อมูล
			ShowNotificationSuccessEdit();

		}
		UserLogin.Department = UserLogin.Department;
		UserLogin.Tel = UserLogin.Tel;
		UserLogin.Password = UserLogin.Password;
	}
}
