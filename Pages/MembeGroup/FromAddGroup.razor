@using CW_ordermedicine.Data.Models
@using CW_ordermedicine.Data.Services
@inject GroupMemberService groupMemberService
@inject UserService userService
@inject LoginService loginService
@inject NotificationService notificationservice

@page "/dropdown"
<div class="modal fade" id="FromAddGroup" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header head_green">
				<h5 class="modal-title" id="staticBackdropLabel">สร้างกลุ่ม</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="container">
					<div class="row">
						<div class="col-12">

							<EditForm Model="@Group">
								<DataAnnotationsValidator/>
								<ValidationSummary />


								<div class="form-group mt-2">
									<label for="productname">ชื่อกลุ่ม</label>
									<InputText @bind-Value="Group.GroupName" type="text" class="form-control mt-2" placeholder=" " />
									<ValidationMessage For="(()=>Group.GroupName)"/>
								</div>

								<label class="mt-2">
									แผนก:
									<InputSelect @bind-Value="Group.Department" style="height:30px; width:150px;">
										<option value="">เลือกแผนก</option>
										<option value="Software">Software</option>
										<option value="Account">Account</option>
										<option value="Maid">Maid</option>
									</InputSelect>
									<ValidationMessage For="(()=>Group.Department)" />
								</label>

							</EditForm>
							@*<RadzenDropDown TValue="string" style="" Placeholder="Select Department"
							Data="@(ListGroup.Select(c=> new {GroupID=c.GruopID , Department=c.Department}))"
							TextProperty="Department" ValueProperty="GroupID">
							</RadzenDropDown>*@

						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
				<button type="button" class="btn btn-success" click="onSave" @onclick="OnClickAddGroup">ยืนยัน</button>
			</div>


		</div>
	</div>
</div>


@code {
	private GroupMember ModelGroup = new();
	[Parameter]
	public EventCallback<GroupMember> GetAddGroupID { get; set; }

	public List<GroupMember> ListGroupMember = new List<GroupMember>();
	public List<User> ListUser = new List<User>();
	private GroupMember Group = new();
	private User? UserLogin = new();
	public List<GroupMember> Test = new List<GroupMember>();

	protected override async Task OnInitializedAsync()
	{
		//Group = new GroupMember();
		//ListGroupMember = await groupMemberService.GetGroupAsync();
		var Groups = await groupMemberService.GetGroupAsync();
		foreach (var Group in Groups)
		{
			ListGroupMember.Add(new GroupMember().ToUi(Group));
		}

		var Users = await userService.GetUserAsync();
		foreach (var user in Users)
		{
			ListUser.Add(new User().ToUi(user));
			//ListUser.Add(new User
			//	{
			//		UserID = user.UserID,
			//		Username = user.Name,
			//		Name = user.Name,
			//		Department = user.Department,
			//		Password = user.Password,
			//		GroupID = user.GroupID
			//	});

		}

		UserLogin = new User().ToUi(loginService.UserToLogin); //แปลงไปใช้ของ UserToUI

	}
	private void OnClickAddGroup()
	{
		string InputName = Group.GroupName;
		string InputDepartment = Group.Department;
		if (Group == null) return;
		if (Group.GroupName == null || Group.Department == null)
		{
			ShowNotificationErrorInput();
			return;
		}
		if (InputName.Length < 3 || InputName.Length > 30)
		{
			ShowNotificationErrorInput();
			return;
		}
		if (Group.GroupName != null || Group.Department != null)
		{
			var AddGroup = new GroupMember().ToTable(Group);
			groupMemberService.AddNewGroupMember(AddGroup); //บันทึกข้อมูล

			Group.GroupName = "";
			Group.Department = "";

			GroupMember CreateListGroup = new GroupMember()
				{
					GroupID = AddGroup.GroupID,
					GroupName = AddGroup.GroupName,
					Department = AddGroup.Department,
				};

			GetAddGroupID.InvokeAsync(CreateListGroup);
		}

	}
	private void ShowNotificationErrorInput()
	{
		var a = new NotificationMessage
			{
				Severity = NotificationSeverity.Error,
				Summary = "กรูณากรอกข้อมูลให้ถูกต้อง",
				Detail = "",
				Duration = 2700,
				CloseOnClick = true,
				Payload = DateTime.Now
			};
		notificationservice.Notify(a);
	}

}
